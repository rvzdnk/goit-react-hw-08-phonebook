{"version":3,"file":"static/js/594.c6119199.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactElement/ContactElement.styled.js","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}`;\n\nexport const Label = styled.label`{\n    margin: 20px 0;\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    font-weight: 700;\n    font-size: 36px;\n    text-transform: uppercase;\n    color: yellow;\n    -webkit-text-stroke-width: 2px;\n    -webkit-text-stroke-color: violet;\n    letter-spacing: 0.05em;\n}`;\n\nexport const Input = styled.input`{\n    height: 40px;\n    border: 2px solid violet;\n    padding-left: 10px;\n    color: violet;\n    background-color: yellow;\n        &:hover{\n            border: 4px solid yellow;\n            color: yellow;\n            background-color: violet;\n        }\n}`;\n\nexport const Button = styled.button`{\n    margin: 30px;\n    font-size: 20px;\n    padding: 10px 20px;\n    color: yellow;\n    background-color: violet;\n    border: 2px solid yellow;\n    text-transform: uppercase;\n    font-weight: bold;\n        &:hover{\n            border: 2px solid violet;\n            padding-left: 10px;\n            color: violet;\n            background-color: yellow;\n            padding: 20px 30px;\n        }\n}`;\n\n","import { nanoid } from 'nanoid';\nimport { Form, Input, Label, Button} from './ContactForm.styled';\nimport { useAddContactMutation, useGetContactsQuery } from '../../services/phonebookApi';\n\n\nconst ContactForm = () => {\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      try {\n        await addContact({\n          id: nanoid(),\n          name,\n          number,\n        });\n      } catch (error) {\n        alert(`Failed! Save error`);\n      }\n      form.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder='Enter name'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"number\">Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        placeholder='Enter phone number'\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\n  export default ContactForm;","import styled from \"styled-components\";\n\nexport const FilterInput = styled.input`{\n    height: 40px;\n    border: 2px solid violet;\n    padding-left: 10px;\n    color: violet;\n    background-color: yellow;\n}`;","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/Actions';\nimport {FilterInput} from './Filter.styled'\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    e.preventDefault();\n    const value = e.target.value.toLowerCase();\n    dispatch(filterContacts(value))\n  };\n    return (\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    );\n  };\n\nexport default Filter;","import styled from \"styled-components\";\n\nexport const List = styled.ul` {\n    color: violet;\n    padding: 0 5px 0 0;\n}`;\n\nexport const ListButton = styled.button`{\n    margin: 0 20px;\n    background-color: violet;\n    color: yellow;\n    font-weight: bold;\n    border: 2px solid yellow;\n    padding: 3px;\n}`;\n\nexport const ListItem = styled.li`{\n    margin: 10px 0;\n    color: yellow;\n    font-weight: bold;\n    font-size: 20px;\n    display: flex;\n    justify-content: space-between;\n}`;\n\n","import { useDeleteContactMutation } from '../../services/phonebookApi';\nimport { List, ListItem, ListButton } from './ContactElement.styled'\n\nconst ContactElement = ({ id, name, number }) => {\n\n    const [deleteItem] = useDeleteContactMutation();\n\n    return (\n        <List key={id}>\n            <ListItem>{name}:</ListItem> {number}\n            <ListButton onClick={() => { deleteItem(id); }}>\n                ⛌\n            </ListButton>\n        </List>\n    );\n};\n\nexport default ContactElement;","import styled from \"styled-components\";\n\nexport const List = styled.ul`{\n    list-style: none;\n    text-transform: capitalize;\n    margin: 30px 0;\n    padding: 0;\n    text-align: center;\n}`;\n\nexport const Message = styled.p`{\n    list-style: none;\n    text-transform: capitalize;\n    margin: 30px 0;\n    padding: 0;\n    text-align: center;\n}`;\n","import Loader from '../Loader/Loader';\nimport ContactElement from '../ContactElement/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery} from '../../services/phonebookApi';\nimport {List, Message} from './ContactList.styled.js';\n\n\nconst ContactList = () => {\n\n    const {\n        data: contacts = [],\n        isLoading,\n        isSuccess,\n        isError,\n        error,\n        } = useGetContactsQuery();\n\n    const filter = useSelector(state => state.filter);\n\n    const contactsList = contacts\n        .filter(cont => cont.name.toLowerCase().includes(filter))\n        .sort((first, second) => first.name.localeCompare(second.name));\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {isSuccess &&\n                (contacts?.length > 0 ? (\n                <List>\n                    {contactsList.map(({ name, number, id }) => {\n                        return <ContactElement key={id} id={id} name={name} number={number}/>\n                    })}\n                </List>\n            ) : (\n                <Message> No contacts available </Message>\n                ))}\n            {isError && <Message> Error: {error} </Message>}\n        </div>\n    );\n};\n\nexport default ContactList;","import React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nfunction Contacts() {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  )\n}\n\nexport default Contacts;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","styled","Label","Input","Button","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","handleSubmit","e","preventDefault","form","target","name","value","number","some","contact","alert","reset","onSubmit","htmlFor","type","placeholder","pattern","title","required","FilterInput","dispatch","useDispatch","onChange","toLowerCase","filterContacts","List","ListButton","ListItem","useDeleteContactMutation","deleteItem","onClick","Message","isLoading","isSuccess","isError","error","filter","useSelector","state","contactsList","cont","includes","sort","first","second","localeCompare","Loader","length","map"],"sourceRoot":""}