{"version":3,"file":"static/js/441.0a229ba6.chunk.js","mappings":"4OAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAAuB,0BAAvB,EAA+D,iCAA/D,EAA8G,iCAA9G,EAA2J,+B,mBC4DzJ,EAxDkB,WAElB,OAAgCG,EAAAA,EAAAA,MAAxBC,KAAMC,OAAd,MAAyB,GAAzB,EACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAASJ,EAAKI,OAAOD,OAEvBT,EAASW,MAAK,SAAAC,GAAO,OAAIA,EAAQJ,OAASA,CAArB,IANN,gBAOjBK,MAAM,GAAD,OAAIL,EAAJ,6BAPY,iDAUTN,EAAW,CACfR,GAAIN,IACJoB,KAAAA,EACAE,OAAAA,IAba,0DAgBfG,MAAM,sBAhBS,QAkBjBP,EAAKQ,QAlBY,0DAAH,sDAsBXR,EAA2CS,EAArCC,EAAqCD,EAA1BE,EAA0BF,EAAbG,EAAaH,EAElD,OACE,kBAAMI,UAAWb,EAAMc,SAAUjB,EAAjC,WACE,kBAAOgB,UAAWD,EAAaG,QAAQ,OAAvC,mBACA,kBAAOF,UAAWF,EAChBK,KAAK,OACLd,KAAK,OACLd,GAAG,OACH6B,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOP,UAAWD,EAAaG,QAAQ,SAAvC,qBACA,kBAAOF,UAAWF,EAChBK,KAAK,MACLd,KAAK,SACLd,GAAG,SACH6B,YAAY,qBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQP,UAAWH,EAAWM,KAAK,SAAnC,2BAGL,E,oBC1DD,EAA+B,6BCuB/B,EApBsB,WACpB,IAAMK,GAAWC,EAAAA,EAAAA,MAQVC,EAAgBd,EACrB,OACE,kBAAOI,UAAWU,EAChBP,KAAK,OACLd,KAAK,SACLsB,SAXW,SAAA1B,GACfA,EAAEC,iBACF,IAAMI,EAAQL,EAAEG,OAAOE,MAAMsB,cAC7BJ,GAASK,EAAAA,EAAAA,IAAevB,GACzB,EAQKc,YAAY,yBAGjB,E,UCrBH,EAA4B,kCAA5B,EAA2E,mCAA3E,EAA2H,mCCiB3H,EAfuB,SAAC,GAA0B,IAAxB7B,EAAuB,EAAvBA,GAAIc,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAEhC,GAAqBuB,EAAAA,EAAAA,MAAdC,GAAP,eACQC,EAAsCpB,EAA3BqB,EAA2BrB,EAAfsB,EAAetB,EAE9C,OACI,gBAAII,UAAWiB,EAAf,WACI,kBAAMjB,UAAWkB,EAAjB,UAA8B7B,EAA9B,OADJ,IACiDE,GAC7C,mBAAQS,UAAWgB,EAAWG,QAAS,WAAQJ,EAAWxC,EAAM,EAAhE,sBAF4BA,EAOvC,ECfD,EAAuB,0BC0CvB,EApCoB,WAEhB,OAMQI,EAAAA,EAAAA,MANR,IACIC,KAAMC,OADV,MACqB,GADrB,EAEIuC,EAFJ,EAEIA,UACAC,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,QACAC,EALJ,EAKIA,MAGEC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAV,IAE1BG,EAAe9C,EAChB2C,QAAO,SAAAI,GAAI,OAAIA,EAAKvC,KAAKuB,cAAciB,SAASL,EAArC,IACXM,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAM1C,KAAK4C,cAAcD,EAAO3C,KAAnD,IAGF6C,EAAStC,EACjB,OACI,2BACKwB,IAAa,SAACe,EAAA,EAAD,IACbd,KACY,OAARxC,QAAQ,IAARA,OAAA,EAAAA,EAAUuD,QAAS,GACpB,eAAIpC,UAAWkC,EAAf,SACKP,EAAaU,KAAI,YAA2B,IAAxBhD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQhB,EAAS,EAATA,GAC/B,OAAO,SAAC,EAAD,CAAyBA,GAAIA,EAAIc,KAAMA,EAAME,OAAQA,GAAhChB,EAC/B,OAGL,cAAGyB,UAAWkC,EAAd,sCAEHZ,IAAW,eAAGtB,UAAWkC,EAAd,qBAA6BX,EAA7B,SAGvB,EC1BD,MAVA,WACE,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactElement/ContactElement.module.css?8e20","components/ContactElement/ContactElement.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { nanoid } from 'nanoid';\nimport styles from './ContactForm.module.css';\nimport { useAddContactMutation, useGetContactsQuery } from '../../services/phonebookApi';\n\n\nconst ContactForm = () => {\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      try {\n        await addContact({\n          id: nanoid(),\n          name,\n          number,\n        });\n      } catch (error) {\n        alert(`Failed! Save error`);\n      }\n      form.reset();\n    }\n  };\n\n  const {form, form__btn, form__input, form__label}=styles\n\n  return (\n    <form className={form} onSubmit={handleSubmit}>\n      <label className={form__label} htmlFor=\"name\">Name</label>\n      <input className={form__input}\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder='Enter name'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={form__label} htmlFor=\"number\">Number</label>\n      <input className={form__input}\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        placeholder='Enter phone number'\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={form__btn} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\n  export default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"filter_input\":\"Filter_filter_input__eu2zm\"};","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/Actions';\nimport styles from './Filter.module.css'\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    e.preventDefault();\n    const value = e.target.value.toLowerCase();\n    dispatch(filterContacts(value))\n  };\n\n  const {filter_input} = styles;\n    return (\n      <input className={filter_input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    );\n  };\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"list__btn\":\"ContactElement_list__btn__Sm9le\",\"list__item\":\"ContactElement_list__item__2SSky\",\"list__name\":\"ContactElement_list__name__nIb-A\"};","import { useDeleteContactMutation } from '../../services/phonebookApi';\nimport styles from './ContactElement.module.css';\n\nconst ContactElement = ({ id, name, number }) => {\n\n    const [deleteItem] = useDeleteContactMutation();\n    const { list__btn, list__item, list__name } = styles;\n\n    return (\n        <li className={list__item} key={id}>\n            <span className={list__name}>{name}:</span> {number}\n            <button className={list__btn} onClick={() => { deleteItem(id); }}>\n                ⛌\n            </button>\n        </li>\n    );\n};\n\nexport default ContactElement;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import Loader from '../Loader/Loader';\nimport ContactElement from '../ContactElement/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery} from '../../services/phonebookApi';\nimport styles from './ContactList.module.css';\n\n\nconst ContactList = () => {\n\n    const {\n        data: contacts = [],\n        isLoading,\n        isSuccess,\n        isError,\n        error,\n        } = useGetContactsQuery();\n\n    const filter = useSelector(state => state.filter);\n\n    const contactsList = contacts\n        .filter(cont => cont.name.toLowerCase().includes(filter))\n        .sort((first, second) => first.name.localeCompare(second.name));\n\n\n    const { list } = styles;\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {isSuccess &&\n                (contacts?.length > 0 ? (\n                <ul className={list}>\n                    {contactsList.map(({ name, number, id }) => {\n                        return <ContactElement key={id} id={id} name={name} number={number}/>\n                    })}\n                </ul>\n            ) : (\n                <p className={list}> No contacts available </p>\n                ))}\n            {isError && <p className={list}> Error: {error} </p>}\n        </div>\n    );\n};\n\nexport default ContactList;","import React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nfunction Contacts() {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  )\n}\n\nexport default Contacts;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","handleSubmit","e","preventDefault","form","target","name","value","number","some","contact","alert","reset","styles","form__btn","form__input","form__label","className","onSubmit","htmlFor","type","placeholder","pattern","title","required","dispatch","useDispatch","filter_input","onChange","toLowerCase","filterContacts","useDeleteContactMutation","deleteItem","list__btn","list__item","list__name","onClick","isLoading","isSuccess","isError","error","filter","useSelector","state","contactsList","cont","includes","sort","first","second","localeCompare","list","Loader","length","map"],"sourceRoot":""}